#!/bin/bash
# Hook Post-Commit pour √âMERGENCE Integrity & Docs Guardian
# D√©clenche Anima (DocKeeper) et Neo (IntegrityWatcher) apr√®s chaque commit

set -e

# Remonter √† la racine du repo et aller au plugin
REPO_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/../.." && pwd)"
PLUGIN_DIR="$REPO_ROOT/claude-plugins/integrity-docs-guardian"
REPORTS_DIR="$PLUGIN_DIR/reports"
SCRIPTS_DIR="$PLUGIN_DIR/scripts"

echo "üîç √âMERGENCE Guardian d'Int√©grit√©: V√©rification Post-Commit"
echo "============================================================="
echo ""

# Assure que le dossier reports existe
mkdir -p "$REPORTS_DIR"

# Info du commit
COMMIT_HASH=$(git rev-parse HEAD)
COMMIT_MSG=$(git log -1 --pretty=%B)
echo "üìù Commit: $COMMIT_HASH"
echo "   Message: $COMMIT_MSG"
echo ""

# √âtape 1: Lancer Anima (DocKeeper) - V√©rification documentation
echo "üìö [1/3] Lancement d'Anima (DocKeeper)..."
if command -v python &> /dev/null; then
    python "$SCRIPTS_DIR/scan_docs.py"
    if [ $? -eq 0 ]; then
        echo "   ‚úÖ Anima termin√© avec succ√®s"
    else
        echo "   ‚ö†Ô∏è  Anima a d√©tect√© des probl√®mes (voir reports/docs_report.json)"
    fi
else
    echo "   ‚ö†Ô∏è  Python introuvable, Anima skip"
fi
echo ""

# √âtape 2: Lancer Neo (IntegrityWatcher) - V√©rification int√©grit√©
echo "üîê [2/3] Lancement de Neo (IntegrityWatcher)..."
if command -v python &> /dev/null; then
    python "$SCRIPTS_DIR/check_integrity.py"
    if [ $? -eq 0 ]; then
        echo "   ‚úÖ Neo termin√© avec succ√®s"
    else
        echo "   ‚ö†Ô∏è  Neo a d√©tect√© des probl√®mes (voir reports/integrity_report.json)"
    fi
else
    echo "   ‚ö†Ô∏è  Python introuvable, Neo skip"
fi
echo ""

# √âtape 3: Lancer Nexus (Coordinator) - G√©n√©ration rapport unifi√©
echo "üéØ [3/3] Lancement de Nexus (Coordinator)..."
if command -v python &> /dev/null && [ -f "$SCRIPTS_DIR/generate_report.py" ]; then
    python "$SCRIPTS_DIR/generate_report.py"
    if [ $? -eq 0 ]; then
        echo "   ‚úÖ Nexus termin√© avec succ√®s"
        echo ""
        echo "üìä Rapports disponibles:"
        echo "   - Anima:  $REPORTS_DIR/docs_report.json"
        echo "   - Neo:    $REPORTS_DIR/integrity_report.json"
        echo "   - Nexus:  $REPORTS_DIR/unified_report.json"
    else
        echo "   ‚ö†Ô∏è  Nexus a plant√©"
    fi
else
    echo "   ‚ÑπÔ∏è  Nexus pas dispo (lance scripts/generate_report.py manuellement)"
fi

echo ""
echo "============================================================="
echo "‚úÖ V√©rification Guardian d'Int√©grit√© termin√©e!"
echo ""

# Optionnel: Afficher le r√©sum√© si dispo
if [ -f "$REPORTS_DIR/unified_report.json" ]; then
    echo "üìã R√©sum√© Rapide:"
    if command -v jq &> /dev/null; then
        jq -r '.executive_summary.headline' "$REPORTS_DIR/unified_report.json" 2>/dev/null || echo "   (jq pas dispo pour parser le JSON)"
    else
        echo "   (installe 'jq' pour un r√©sum√© format√©)"
    fi
fi
