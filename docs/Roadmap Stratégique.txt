# üó∫Ô∏è Roadmap Strat√©gique - √âMERGENCE V7.0

*Version : 2025-07-04*

Ce document formalise la vision et la feuille de route pour le d√©veloppement d'√âmergence V7. Il sert de r√©f√©rence pour s'assurer que chaque nouvelle fonctionnalit√© s'int√®gre de mani√®re coh√©rente dans une architecture modulaire, robuste et maintenable.

### Principes Directeurs
- **Architecture Modulaire :** Chaque fonctionnalit√© est un module ind√©pendant.
- **Responsabilit√© Unique :** Un fichier = une seule et unique fonction.
- **D√©veloppement Pragmatique :** Utilisation d'un "Mode Dev" avec des mod√®les peu co√ªteux (Gemini 1.5 Flash) pour acc√©l√©rer le d√©veloppement sans impacter la facture.
- **Z√©ro Dette Technique :** On construit bien du premier coup.

---

### Phase 2 : La M√©moire Vive (Fondation)
* **Objectif Principal :** Donner √† √âMERGENCE une m√©moire persistante, intelligente et capable d'oubli s√©lectif.
* **Concepts Cl√©s :**
    - **Sauvegarde Int√©grale :** Stockage de chaque session (dialogues, d√©bats, m√©tadonn√©es) dans un champ JSON unique.
    - **Analyse S√©mantique :** Extraction automatique de th√®mes, concepts et entit√©s de chaque session.
    - **Score de Vivacit√© & Oubli :** Simulation d'un m√©canisme d'oubli en faisant d√©cro√Ætre un "score de pertinence" dans le temps, pour prioriser les souvenirs r√©cents ou importants.
* **Modules Impact√©s/Cr√©√©s :**
    - `core/database.py` (Modifi√©)
    - `core/session_manager.py` (Nouveau)
    - `features/memory/analyzer.py` (Nouveau)
    - `features/memory/gardener.py` (Nouveau, pour l'oubli)
    - `core/temporal_search.py` (Nouveau)

---

### Phase 3 : Le RAG Ma√Ætris√© (Gestion des Documents)
* **Objectif Principal :** Permettre l'upload et l'analyse de documents (`.pdf`, `.docx`, `.txt`) pour que les agents puissent s'y r√©f√©rer dans leurs conversations.
* **Concepts Cl√©s :**
    - **Parsing & Chunking :** Extraction du texte et d√©coupage en morceaux s√©mantiques.
    - **Vectorisation :** Transformation des morceaux de texte en vecteurs pour la recherche s√©mantique.
    - **Augmentation de Contexte :** Les agents trouvent les morceaux de documents les plus pertinents et les utilisent pour formuler leurs r√©ponses.
* **Modules Impact√©s/Cr√©√©s :**
    - `features/documents/` (Nouveau module de feature)
    - `features/documents/parser.py` (Nouveau)
    - `database.py` (√âtendu pour g√©rer les collections de vecteurs de documents)

---

### Phase 4 : L'Interaction Vocale
* **Objectif Principal :** Permettre des conversations vocales fluides avec les agents, en particulier sur mobile.
* **Concepts Cl√©s :**
    - **Speech-to-Text :** Transcription de la voix de l'utilisateur en texte via une API externe (ex: Whisper).
    - **Text-to-Speech :** Synth√®se de la r√©ponse textuelle de l'agent en audio via une API externe (ex: ElevenLabs).
    - **Streaming :** Assurer une faible latence pour une conversation naturelle.
* **Modules Impact√©s/Cr√©√©s :**
    - `features/voice/` (Nouveau module de feature)
    - `core/websocket.py` (Probablement modifi√© pour g√©rer le streaming audio)

---

### Phase 5 : L'Analyse d'Images
* **Objectif Principal :** Permettre de soumettre une image aux agents pour analyse ou discussion.
* **Concepts Cl√©s :**
    - **Mod√®les Multimodaux :** Utilisation de la capacit√© des mod√®les r√©cents (GPT-4o, Gemini 1.5) √† interpr√©ter des images.
    - **Description Textuelle :** Le mod√®le d√©crit l'image en interne pour que le contexte puisse √™tre utilis√© par tous les agents.
* **Modules Impact√©s/Cr√©√©s :**
    - `features/images/` (Nouveau module de feature)

---

### Phase 6 : L'Agent Connect√© (Acc√®s Web)
* **Objectif Principal :** Donner aux agents la capacit√© de chercher des informations en temps r√©el sur le web.
* **Concepts Cl√©s :**
    - **Mode Curateur (Proactif) :** Sugg√©rer des articles ou lectures en se basant sur les concepts d'une session termin√©e.
    - **Mode Chercheur (R√©actif) :** Lancer une recherche web sur demande explicite de l'utilisateur.
    - **Tool Use / Function Calling :** Utilisation des capacit√©s natives des LLMs √† appeler des outils externes.
* **Modules Impact√©s/Cr√©√©s :**
    - `features/tools/web_connector.py` (Nouveau)

---

### Phase 7 : Le Cockpit de Pilotage (Tableau de Bord)
* **Objectif Principal :** Fournir une interface claire pour ma√Ætriser les co√ªts, surveiller la performance et comprendre l'usage de l'application.
* **Concepts Cl√©s :**
    - **Gestion des Co√ªts :** Suivi par session, par agent, par fonctionnalit√©, avec un syst√®me d'alertes.
    - **Sant√© du Syst√®me :** Monitoring de la base de donn√©es, latence des API, performance de la recherche.
    - **Analyse d'Usage :** Statistiques sur les agents, modes et concepts les plus utilis√©s.
* **Modules Impact√©s/Cr√©√©s :**
    - `features/dashboard/` (Nouveau module de feature backend + frontend)
    - `core/system_monitor.py` (Nouveau)

---