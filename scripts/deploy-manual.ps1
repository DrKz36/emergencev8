#!/usr/bin/env pwsh
<#
.SYNOPSIS
    D√©ploie manuellement Emergence sur Cloud Run via GitHub Actions

.DESCRIPTION
    D√©clenche le workflow GitHub Actions de d√©ploiement manuellement.
    √âvite les deploys automatiques √† chaque push (contr√¥le total).

.PARAMETER Reason
    Raison du d√©ploiement (optionnel, pour tra√ßabilit√©)

.EXAMPLE
    .\scripts\deploy-manual.ps1
    .\scripts\deploy-manual.ps1 -Reason "Fix bug auth critique"

.NOTES
    Pr√©requis:
    - GitHub CLI install√©e (gh)
    - Authentifi√© (gh auth login)
    - Branch main √† jour (git pull)
#>

param(
    [string]$Reason = ""
)

$ErrorActionPreference = "Stop"

Write-Host "üöÄ D√©ploiement manuel Emergence sur Cloud Run" -ForegroundColor Cyan
Write-Host ""

# V√©rifier que gh CLI est install√©
if (-not (Get-Command gh -ErrorAction SilentlyContinue)) {
    Write-Host "‚ùå GitHub CLI (gh) n'est pas install√©" -ForegroundColor Red
    Write-Host "   Installez-le: winget install GitHub.cli" -ForegroundColor Yellow
    exit 1
}

# V√©rifier l'authentification gh
$authStatus = gh auth status 2>&1
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå GitHub CLI non authentifi√©" -ForegroundColor Red
    Write-Host "   Ex√©cutez: gh auth login" -ForegroundColor Yellow
    exit 1
}

# V√©rifier qu'on est sur la branche main
$currentBranch = git rev-parse --abbrev-ref HEAD
if ($currentBranch -ne "main") {
    Write-Host "‚ö†Ô∏è  Vous n'√™tes pas sur la branche main (actuellement: $currentBranch)" -ForegroundColor Yellow
    $continue = Read-Host "Voulez-vous quand m√™me d√©ployer depuis main? (o/N)"
    if ($continue -ne "o" -and $continue -ne "O") {
        Write-Host "‚ùå D√©ploiement annul√©" -ForegroundColor Red
        exit 0
    }
}

# S'assurer que main est √† jour
Write-Host "üì• Mise √† jour de la branche main..." -ForegroundColor Yellow
git fetch origin main
git checkout main
git pull origin main

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Impossible de mettre √† jour la branche main" -ForegroundColor Red
    exit 1
}

# Afficher le commit qui sera d√©ploy√©
$lastCommit = git log -1 --oneline
Write-Host ""
Write-Host "üì¶ Commit √† d√©ployer:" -ForegroundColor Cyan
Write-Host "   $lastCommit" -ForegroundColor White
Write-Host ""

if ($Reason) {
    Write-Host "üìù Raison: $Reason" -ForegroundColor Cyan
    Write-Host ""
}

# Confirmation finale
$confirm = Read-Host "Confirmer le d√©ploiement? (o/N)"
if ($confirm -ne "o" -and $confirm -ne "O") {
    Write-Host "‚ùå D√©ploiement annul√©" -ForegroundColor Red
    exit 0
}

# D√©clencher le workflow GitHub Actions
Write-Host ""
Write-Host "üöÄ D√©clenchement du workflow GitHub Actions..." -ForegroundColor Green

if ($Reason) {
    gh workflow run deploy.yml -f reason="$Reason"
} else {
    gh workflow run deploy.yml
}

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Erreur lors du d√©clenchement du workflow" -ForegroundColor Red
    exit 1
}

Write-Host ""
Write-Host "‚úÖ Workflow de d√©ploiement d√©clench√©!" -ForegroundColor Green
Write-Host ""
Write-Host "üìä Pour suivre le d√©ploiement:" -ForegroundColor Cyan
Write-Host "   1. Via GitHub UI: https://github.com/votre-repo/actions" -ForegroundColor White
Write-Host "   2. Via CLI: gh run watch" -ForegroundColor White
Write-Host ""
Write-Host "üîó App d√©ploy√©e sur: https://emergence-app-469005.europe-west1.run.app" -ForegroundColor Cyan
Write-Host ""

# Proposer de suivre le d√©ploiement
$watch = Read-Host "Voulez-vous suivre le d√©ploiement en temps r√©el? (o/N)"
if ($watch -eq "o" -or $watch -eq "O") {
    Write-Host ""
    Write-Host "üëÄ Suivi du d√©ploiement..." -ForegroundColor Yellow
    gh run watch
}
