# Scheduled Codex Summary - G√©n√®re r√©sum√© Guardian pour Codex GPT (Task Scheduler)
# Ex√©cut√© toutes les 6h automatiquement

$ErrorActionPreference = "Stop"
$RepoRoot = "C:\dev\emergenceV8"

# Timestamp
$timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
Write-Host "============================================================" -ForegroundColor Cyan
Write-Host "SCHEDULED CODEX SUMMARY GENERATION" -ForegroundColor Cyan
Write-Host "Timestamp: $timestamp" -ForegroundColor Cyan
Write-Host "============================================================" -ForegroundColor Cyan
Write-Host ""

# Changer vers le repo
Set-Location $RepoRoot

# Activer virtualenv Python si pr√©sent
if (Test-Path ".venv\Scripts\Activate.ps1") {
    Write-Host "üêç Activation virtualenv..." -ForegroundColor Yellow
    & .\.venv\Scripts\Activate.ps1
}

# 1. R√©g√©n√©rer rapports Guardian frais
Write-Host "üìä G√©n√©ration rapports Guardian frais..." -ForegroundColor Yellow

# ProdGuardian
Write-Host "  ‚òÅÔ∏è  ProdGuardian (production Cloud Run)..." -ForegroundColor Gray
try {
    python claude-plugins/integrity-docs-guardian/scripts/check_prod_logs.py 2>&1 | Out-Null
    Write-Host "    ‚úÖ ProdGuardian OK" -ForegroundColor Green
} catch {
    Write-Host "    ‚ö†Ô∏è  ProdGuardian failed: $_" -ForegroundColor Yellow
}

# Anima (DocKeeper)
Write-Host "  üìö Anima (documentation)..." -ForegroundColor Gray
try {
    python claude-plugins/integrity-docs-guardian/scripts/scan_docs.py 2>&1 | Out-Null
    Write-Host "    ‚úÖ Anima OK" -ForegroundColor Green
} catch {
    Write-Host "    ‚ö†Ô∏è  Anima failed: $_" -ForegroundColor Yellow
}

# Neo (IntegrityWatcher)
Write-Host "  üîê Neo (int√©grit√©)..." -ForegroundColor Gray
try {
    python claude-plugins/integrity-docs-guardian/scripts/check_integrity.py 2>&1 | Out-Null
    Write-Host "    ‚úÖ Neo OK" -ForegroundColor Green
} catch {
    Write-Host "    ‚ö†Ô∏è  Neo failed: $_" -ForegroundColor Yellow
}

# Nexus (Coordinator)
Write-Host "  üéØ Nexus (rapport unifi√©)..." -ForegroundColor Gray
try {
    python claude-plugins/integrity-docs-guardian/scripts/master_orchestrator.py 2>&1 | Out-Null
    Write-Host "    ‚úÖ Nexus OK" -ForegroundColor Green
} catch {
    Write-Host "    ‚ö†Ô∏è  Nexus failed: $_" -ForegroundColor Yellow
}

Write-Host ""

# 2. G√©n√©rer r√©sum√© Codex
Write-Host "üìù G√©n√©ration r√©sum√© Codex GPT..." -ForegroundColor Yellow
try {
    python scripts/generate_codex_summary.py
    Write-Host "‚úÖ R√©sum√© Codex g√©n√©r√©: reports/codex_summary.md" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erreur g√©n√©ration r√©sum√© Codex: $_" -ForegroundColor Red
    exit 1
}

Write-Host ""
Write-Host "============================================================" -ForegroundColor Cyan
Write-Host "‚úÖ SUCC√àS - R√©sum√© Codex mis √† jour" -ForegroundColor Green
Write-Host "============================================================" -ForegroundColor Cyan

# Log dans fichier
$logFile = "logs/scheduled_codex_summary.log"
if (-not (Test-Path (Split-Path $logFile))) {
    New-Item -ItemType Directory -Path (Split-Path $logFile) -Force | Out-Null
}
Add-Content -Path $logFile -Value "[$timestamp] R√©sum√© Codex g√©n√©r√© avec succ√®s"

exit 0
