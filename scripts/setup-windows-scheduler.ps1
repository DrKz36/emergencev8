# Script pour cr√©er des t√¢ches planifi√©es Windows (3x/jour)
# √âMERGENCE V8 - Audit automatis√© local
# ‚ö†Ô∏è IMPORTANT: Ton PC doit rester allum√© pour que √ßa fonctionne

param(
    [string]$PythonPath = "python",
    [string]$ScriptPath = "$PSScriptRoot\run_audit.py"
)

Write-Host "============================================================" -ForegroundColor Cyan
Write-Host "  CONFIGURATION TASK SCHEDULER WINDOWS" -ForegroundColor Cyan
Write-Host "  ‚ö†Ô∏è  TON PC DOIT RESTER ALLUM√â" -ForegroundColor Yellow
Write-Host "============================================================`n" -ForegroundColor Cyan

# V√©rifier si on est admin
$IsAdmin = ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)

if (-not $IsAdmin) {
    Write-Host "‚ùå Ce script n√©cessite les droits administrateur" -ForegroundColor Red
    Write-Host "   Relance PowerShell en tant qu'administrateur`n" -ForegroundColor Yellow
    exit 1
}

# V√©rifier que Python est disponible
$PythonVersion = & $PythonPath --version 2>&1

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Python non trouv√© √†: $PythonPath" -ForegroundColor Red
    Write-Host "   Sp√©cifie le chemin complet avec -PythonPath`n" -ForegroundColor Yellow
    exit 1
}

Write-Host "‚úÖ Python trouv√©: $PythonVersion`n" -ForegroundColor Green

# V√©rifier que le script existe
if (-not (Test-Path $ScriptPath)) {
    Write-Host "‚ùå Script non trouv√©: $ScriptPath" -ForegroundColor Red
    exit 1
}

Write-Host "‚úÖ Script trouv√©: $ScriptPath`n" -ForegroundColor Green

# D√©finir les t√¢ches (3x/jour)
$Tasks = @(
    @{
        Name = "Emergence-Audit-Morning"
        Time = "08:00"
        Description = "Audit √âMERGENCE matinal (08:00)"
    },
    @{
        Name = "Emergence-Audit-Afternoon"
        Time = "14:00"
        Description = "Audit √âMERGENCE apr√®s-midi (14:00)"
    },
    @{
        Name = "Emergence-Audit-Evening"
        Time = "20:00"
        Description = "Audit √âMERGENCE soir√©e (20:00)"
    }
)

Write-Host "[1/3] Cr√©ation des t√¢ches planifi√©es...`n" -ForegroundColor Yellow

foreach ($Task in $Tasks) {
    Write-Host "  Cr√©ation: $($Task.Description)..." -ForegroundColor Cyan

    # Supprimer la t√¢che existante si pr√©sente
    Unregister-ScheduledTask -TaskName $Task.Name -Confirm:$false -ErrorAction SilentlyContinue

    # Action: ex√©cuter le script Python
    $Action = New-ScheduledTaskAction `
        -Execute $PythonPath `
        -Argument "`"$ScriptPath`" --target emergence-app-00501-zon --mode full" `
        -WorkingDirectory (Split-Path $ScriptPath)

    # Trigger: tous les jours √† l'heure sp√©cifi√©e
    $Trigger = New-ScheduledTaskTrigger `
        -Daily `
        -At $Task.Time

    # Settings
    $Settings = New-ScheduledTaskSettingsSet `
        -AllowStartIfOnBatteries `
        -DontStopIfGoingOnBatteries `
        -StartWhenAvailable `
        -RunOnlyIfNetworkAvailable `
        -ExecutionTimeLimit (New-TimeSpan -Minutes 15)

    # Principal: ex√©cuter avec l'utilisateur courant
    $Principal = New-ScheduledTaskPrincipal `
        -UserId "$env:USERDOMAIN\$env:USERNAME" `
        -LogonType Interactive `
        -RunLevel Highest

    # Cr√©er la t√¢che
    Register-ScheduledTask `
        -TaskName $Task.Name `
        -Description $Task.Description `
        -Action $Action `
        -Trigger $Trigger `
        -Settings $Settings `
        -Principal $Principal `
        -Force | Out-Null

    if ($?) {
        Write-Host "  ‚úÖ $($Task.Name) cr√©√©e" -ForegroundColor Green
    } else {
        Write-Host "  ‚ùå Erreur cr√©ation $($Task.Name)" -ForegroundColor Red
    }
}

Write-Host "`n‚úÖ T√¢ches planifi√©es cr√©√©es`n" -ForegroundColor Green

# Afficher les t√¢ches cr√©√©es
Write-Host "[2/3] V√©rification des t√¢ches..." -ForegroundColor Yellow

foreach ($Task in $Tasks) {
    $ScheduledTask = Get-ScheduledTask -TaskName $Task.Name -ErrorAction SilentlyContinue

    if ($ScheduledTask) {
        $NextRun = (Get-ScheduledTaskInfo -TaskName $Task.Name).NextRunTime
        Write-Host "  ‚úÖ $($Task.Name)" -ForegroundColor Green
        Write-Host "     Prochaine ex√©cution: $NextRun" -ForegroundColor Cyan
    } else {
        Write-Host "  ‚ùå $($Task.Name) non trouv√©e" -ForegroundColor Red
    }
}

# Test optionnel
Write-Host "`n[3/3] Test des t√¢ches..." -ForegroundColor Yellow
$RunTest = Read-Host "Lancer un test maintenant? (o/n)"

if ($RunTest -eq "o") {
    Write-Host "`n  Lancement du test..." -ForegroundColor Cyan
    Write-Host "  (Cela peut prendre quelques minutes)"`n -ForegroundColor Yellow

    Start-ScheduledTask -TaskName $Tasks[0].Name

    # Attendre quelques secondes
    Start-Sleep -Seconds 5

    # V√©rifier le statut
    $TaskInfo = Get-ScheduledTaskInfo -TaskName $Tasks[0].Name

    Write-Host "  Derni√®re ex√©cution: $($TaskInfo.LastRunTime)" -ForegroundColor Cyan
    Write-Host "  R√©sultat: $($TaskInfo.LastTaskResult)" -ForegroundColor Cyan

    if ($TaskInfo.LastTaskResult -eq 0) {
        Write-Host "`n  ‚úÖ Test r√©ussi - v√©rifiez votre email!" -ForegroundColor Green
    } else {
        Write-Host "`n  ‚ö†Ô∏è  Code de sortie: $($TaskInfo.LastTaskResult)" -ForegroundColor Yellow
        Write-Host "  Consultez les logs Task Scheduler pour plus de d√©tails" -ForegroundColor Yellow
    }
} else {
    Write-Host "  Test ignor√©" -ForegroundColor Yellow
}

Write-Host "`n============================================================" -ForegroundColor Cyan
Write-Host "  ‚úÖ CONFIGURATION TERMIN√âE" -ForegroundColor Green
Write-Host "============================================================`n" -ForegroundColor Cyan

Write-Host "üìä R√©sum√©:" -ForegroundColor Yellow
Write-Host "  - 3 t√¢ches planifi√©es cr√©√©es" -ForegroundColor White
Write-Host "  - Email: gonzalefernando@gmail.com" -ForegroundColor White
Write-Host "  - Fr√©quence: 3x/jour (08:00, 14:00, 20:00)" -ForegroundColor White

Write-Host "`nüìß Prochains rapports automatiques:" -ForegroundColor Yellow
Write-Host "  - Matin: 08:00" -ForegroundColor White
Write-Host "  - Apr√®s-midi: 14:00" -ForegroundColor White
Write-Host "  - Soir: 20:00" -ForegroundColor White

Write-Host "`n‚ö†Ô∏è  IMPORTANT:" -ForegroundColor Red
Write-Host "  - Ton PC doit rester ALLUM√â pour que les t√¢ches s'ex√©cutent" -ForegroundColor Yellow
Write-Host "  - Si ton PC est √©teint, les t√¢ches ne tourneront PAS" -ForegroundColor Yellow
Write-Host "  - Pour un monitoring 24/7, utilise la solution Cloud Run (deploy-cloud-audit.ps1)" -ForegroundColor Cyan

Write-Host "`nüîó Ouvrir Task Scheduler:" -ForegroundColor Yellow
Write-Host "  taskschd.msc" -ForegroundColor Cyan

Write-Host "`n‚úÖ Configuration termin√©e!`n" -ForegroundColor Green
