{
  "env": {
    "AUTO_UPDATE_DOCS": "0",
    "AUTO_APPLY": "0"
  },
  "permissions": {
    "allow": [
      "*",
      "Bash(git status)",
      "Bash(git add -A)",
      "Bash(git add .)",
      "Bash(git diff)",
      "Bash(git diff --cached)",
      "Bash(git diff --stat)",
      "Bash(git log --oneline -10)",
      "Bash(git log --oneline -20)",
      "Bash(git log -1 --pretty=%B)",
      "Bash(git fetch --all --prune)",
      "Bash(git pull)",
      "Bash(git push origin main)",
      "Bash(git push)",
      "Bash(git commit -m *)",
      "Bash(git branch)",
      "Bash(git checkout -b *)",
      "Bash(git merge *)",
      "Bash(git stash)",
      "Bash(git stash pop)",
      "Bash(npm install)",
      "Bash(npm run build)",
      "Bash(npm run dev)",
      "Bash(npm run test)",
      "Bash(npm audit)",
      "Bash(npm audit fix)",
      "Bash(pytest)",
      "Bash(pytest tests/)",
      "Bash(pytest tests/backend/)",
      "Bash(pytest -v)",
      "Bash(pytest -v -s)",
      "Bash(python -m pytest *)",
      "Bash(ruff check src/backend/)",
      "Bash(ruff check .)",
      "Bash(mypy src/backend/)",
      "Bash(python -m mypy src/backend/)",
      "Bash(pwsh -File scripts/run-backend.ps1)",
      "Bash(pwsh -File scripts/deploy-canary.ps1)",
      "Bash(pwsh -File scripts/deploy.ps1)",
      "Bash(pwsh -File tests/run_all.ps1)",
      "Bash(pwsh -File scripts/bootstrap.ps1)",
      "Bash(pwsh -File scripts/sync-workdir.ps1)",
      "Bash(pwsh -NoProfile -Command *)",
      "Bash(docker build *)",
      "Bash(docker push *)",
      "Bash(docker run *)",
      "Bash(docker ps)",
      "Bash(docker logs *)",
      "Bash(gcloud run services list)",
      "Bash(gcloud run services describe *)",
      "Bash(gcloud logging read *)",
      "Bash(gcloud secrets *)",
      "Read(**/*.py)",
      "Read(**/*.js)",
      "Read(**/*.ts)",
      "Read(**/*.json)",
      "Read(**/*.md)",
      "Read(**/*.yaml)",
      "Read(**/*.yml)",
      "Read(**/*.ps1)",
      "Read(**/*.sh)",
      "Read(**/*.env*)",
      "Read(**/*.txt)",
      "Read(.claude/**)",
      "Read(docs/**)",
      "Read(src/**)",
      "Read(scripts/**)",
      "Read(tests/**)",
      "Read(migrations/**)",
      "Read(reports/**)",
      "Read(claude-plugins/**)",
      "Edit(**/*.py)",
      "Edit(**/*.js)",
      "Edit(**/*.ts)",
      "Edit(**/*.json)",
      "Edit(**/*.md)",
      "Edit(**/*.yaml)",
      "Edit(**/*.yml)",
      "Edit(**/*.env*)",
      "Edit(.claude/settings.local.json)",
      "Edit(AGENT_SYNC.md)",
      "Edit(docs/passation.md)",
      "Edit(CLAUDE.md)",
      "Edit(package.json)",
      "Edit(requirements.txt)",
      "Write(**/*.py)",
      "Write(**/*.js)",
      "Write(**/*.md)",
      "Write(**/*.json)",
      "Write(reports/**)",
      "Write(docs/**)",
      "Bash(cat *)",
      "Bash(ls)",
      "Bash(ls -la)",
      "Bash(pwd)",
      "Bash(which *)",
      "Bash(echo *)",
      "Bash(python -m json.tool)",
      "Bash(python --version)",
      "Bash(node --version)",
      "Bash(npm --version)",
      "Bash(pwsh -NoProfile -Command \"echo $PROFILE\")",
      "Bash(pwsh -NoProfile -Command '$PROFILE')",
      "Bash(pwsh -NoProfile -Command \"Test-Path *\")",
      "Bash(pwsh -NoProfile -Command \"Get-Content *\")",
      "Bash(pwsh -NoProfile -Command \"Get-ChildItem *\")",
      "Read(//c/Users/*/OneDrive/**)",
      "Read(//c/Users/*/.config/**)",
      "Read(//c/Users/*/Documents/**)",
      "Bash(python claude-plugins/integrity-docs-guardian/scripts/scan_docs.py)",
      "Bash(python claude-plugins/integrity-docs-guardian/scripts/check_integrity.py)",
      "Bash(python claude-plugins/integrity-docs-guardian/scripts/generate_report.py)",
      "Bash(python claude-plugins/integrity-docs-guardian/scripts/check_prod_logs.py)",
      "Bash(python claude-plugins/integrity-docs-guardian/scripts/archive_guardian.py *)",
      "Bash(attrib +R *)",
      "Bash(attrib -R *)",
      "Bash(attrib *)",
      "Read(.vscode/**)",
      "Edit(.vscode/settings.json)",
      "Bash(code *)",
      "Bash(python src/backend/cli/backfill_agent_ids.py *)",
      "Bash(python apply_migration_*.py)",
      "Bash(sqlite3 emergence.db *)",
      "Bash(curl *)",
      "Bash(wget *)",
      "Bash(tar *)",
      "Bash(zip *)",
      "Bash(unzip *)",
      "Bash(find . -name *)",
      "Bash(grep -r *)",
      "Bash(pwsh -NoProfile -Command \"Test-Path $env:APPDATA\\*\")",
      "Bash(pwsh -NoProfile -Command \"Test-Path $env:LOCALAPPDATA\\*\")",
      "Bash(pwsh -NoProfile -Command \"Get-Content $env:*\")",
      "Bash(cp * *.backup)",
      "Bash(cp -r * *.backup)",
      "Bash(mv * *)",
      "Write(**/*.backup)",
      "Bash(if [ -f * ])",
      "Bash(then *)",
      "Bash(else *)",
      "Bash(fi)",
      "Bash(python .claude/apply_ultimate_config.py *)"
    ],
    "deny": [],
    "ask": []
  }
}
