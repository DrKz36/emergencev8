# syntax=docker/dockerfile:1
# Dockerfile optimisé pour réduire la taille de l'image

FROM python:3.11-slim as builder

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1

ARG EMBED_MODEL_NAME=all-MiniLM-L6-v2
ENV EMBED_MODEL_NAME=${EMBED_MODEL_NAME}

# System dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
      build-essential libmagic1 \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Python dependencies
COPY requirements.txt .
RUN python -m pip install --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt && \
    find /usr/local/lib/python3.11/site-packages -type d -name "tests" -exec rm -rf {} + 2>/dev/null || true && \
    find /usr/local/lib/python3.11/site-packages -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true

# Pre-download embedding model
ENV SENTENCE_TRANSFORMERS_HOME=/tmp/sentence_transformers
ENV HF_HOME=/tmp/huggingface
RUN python -c "import os; from sentence_transformers import SentenceTransformer; model_name = os.environ.get('EMBED_MODEL_NAME', 'all-MiniLM-L6-v2'); SentenceTransformer(model_name)"

# ===== PRODUCTION IMAGE =====
FROM python:3.11-slim

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PORT=8080

ARG EMBED_MODEL_NAME=all-MiniLM-L6-v2
ENV EMBED_MODEL_NAME=${EMBED_MODEL_NAME}
ENV SENTENCE_TRANSFORMERS_HOME=/root/.cache/sentence_transformers
ENV HF_HOME=/root/.cache/huggingface

# Only runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
      libmagic1 \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy Python packages from builder
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Copy embedding model cache
COPY --from=builder /tmp/sentence_transformers /root/.cache/sentence_transformers
COPY --from=builder /tmp/huggingface /root/.cache/huggingface

# Application code (exclude unnecessary files)
COPY src ./src
COPY docs ./docs
COPY reports ./reports
COPY .claude-plugins ./.claude-plugins

CMD ["sh", "-c", "python -m uvicorn --app-dir src backend.main:app --host 0.0.0.0 --port ${PORT:-8080}"]
